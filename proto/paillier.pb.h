// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paillier.proto

#ifndef PROTOBUF_INCLUDED_paillier_2eproto
#define PROTOBUF_INCLUDED_paillier_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_paillier_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_paillier_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_paillier_2eproto();
namespace safeheron {
namespace proto {
class PailPriv;
class PailPrivDefaultTypeInternal;
extern PailPrivDefaultTypeInternal _PailPriv_default_instance_;
class PailPub;
class PailPubDefaultTypeInternal;
extern PailPubDefaultTypeInternal _PailPub_default_instance_;
}  // namespace proto
}  // namespace safeheron
namespace google {
namespace protobuf {
template<> ::safeheron::proto::PailPriv* Arena::CreateMaybeMessage<::safeheron::proto::PailPriv>(Arena*);
template<> ::safeheron::proto::PailPub* Arena::CreateMaybeMessage<::safeheron::proto::PailPub>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace safeheron {
namespace proto {

// ===================================================================

class PailPub :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:safeheron.proto.PailPub) */ {
 public:
  PailPub();
  virtual ~PailPub();

  PailPub(const PailPub& from);

  inline PailPub& operator=(const PailPub& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PailPub(PailPub&& from) noexcept
    : PailPub() {
    *this = ::std::move(from);
  }

  inline PailPub& operator=(PailPub&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PailPub& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PailPub* internal_default_instance() {
    return reinterpret_cast<const PailPub*>(
               &_PailPub_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PailPub* other);
  friend void swap(PailPub& a, PailPub& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PailPub* New() const final {
    return CreateMaybeMessage<PailPub>(nullptr);
  }

  PailPub* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PailPub>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PailPub& from);
  void MergeFrom(const PailPub& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PailPub* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string n = 1;
  void clear_n();
  static const int kNFieldNumber = 1;
  const ::std::string& n() const;
  void set_n(const ::std::string& value);
  #if LANG_CXX11
  void set_n(::std::string&& value);
  #endif
  void set_n(const char* value);
  void set_n(const char* value, size_t size);
  ::std::string* mutable_n();
  ::std::string* release_n();
  void set_allocated_n(::std::string* n);

  // string g = 2;
  void clear_g();
  static const int kGFieldNumber = 2;
  const ::std::string& g() const;
  void set_g(const ::std::string& value);
  #if LANG_CXX11
  void set_g(::std::string&& value);
  #endif
  void set_g(const char* value);
  void set_g(const char* value, size_t size);
  ::std::string* mutable_g();
  ::std::string* release_g();
  void set_allocated_g(::std::string* g);

  // @@protoc_insertion_point(class_scope:safeheron.proto.PailPub)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr n_;
  ::google::protobuf::internal::ArenaStringPtr g_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_paillier_2eproto;
};
// -------------------------------------------------------------------

class PailPriv :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:safeheron.proto.PailPriv) */ {
 public:
  PailPriv();
  virtual ~PailPriv();

  PailPriv(const PailPriv& from);

  inline PailPriv& operator=(const PailPriv& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PailPriv(PailPriv&& from) noexcept
    : PailPriv() {
    *this = ::std::move(from);
  }

  inline PailPriv& operator=(PailPriv&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PailPriv& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PailPriv* internal_default_instance() {
    return reinterpret_cast<const PailPriv*>(
               &_PailPriv_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PailPriv* other);
  friend void swap(PailPriv& a, PailPriv& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PailPriv* New() const final {
    return CreateMaybeMessage<PailPriv>(nullptr);
  }

  PailPriv* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PailPriv>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PailPriv& from);
  void MergeFrom(const PailPriv& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PailPriv* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string n = 1;
  void clear_n();
  static const int kNFieldNumber = 1;
  const ::std::string& n() const;
  void set_n(const ::std::string& value);
  #if LANG_CXX11
  void set_n(::std::string&& value);
  #endif
  void set_n(const char* value);
  void set_n(const char* value, size_t size);
  ::std::string* mutable_n();
  ::std::string* release_n();
  void set_allocated_n(::std::string* n);

  // string lambda = 2;
  void clear_lambda();
  static const int kLambdaFieldNumber = 2;
  const ::std::string& lambda() const;
  void set_lambda(const ::std::string& value);
  #if LANG_CXX11
  void set_lambda(::std::string&& value);
  #endif
  void set_lambda(const char* value);
  void set_lambda(const char* value, size_t size);
  ::std::string* mutable_lambda();
  ::std::string* release_lambda();
  void set_allocated_lambda(::std::string* lambda);

  // string mu = 3;
  void clear_mu();
  static const int kMuFieldNumber = 3;
  const ::std::string& mu() const;
  void set_mu(const ::std::string& value);
  #if LANG_CXX11
  void set_mu(::std::string&& value);
  #endif
  void set_mu(const char* value);
  void set_mu(const char* value, size_t size);
  ::std::string* mutable_mu();
  ::std::string* release_mu();
  void set_allocated_mu(::std::string* mu);

  // string p = 4;
  void clear_p();
  static const int kPFieldNumber = 4;
  const ::std::string& p() const;
  void set_p(const ::std::string& value);
  #if LANG_CXX11
  void set_p(::std::string&& value);
  #endif
  void set_p(const char* value);
  void set_p(const char* value, size_t size);
  ::std::string* mutable_p();
  ::std::string* release_p();
  void set_allocated_p(::std::string* p);

  // string q = 5;
  void clear_q();
  static const int kQFieldNumber = 5;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const char* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // string pSqr = 6;
  void clear_psqr();
  static const int kPSqrFieldNumber = 6;
  const ::std::string& psqr() const;
  void set_psqr(const ::std::string& value);
  #if LANG_CXX11
  void set_psqr(::std::string&& value);
  #endif
  void set_psqr(const char* value);
  void set_psqr(const char* value, size_t size);
  ::std::string* mutable_psqr();
  ::std::string* release_psqr();
  void set_allocated_psqr(::std::string* psqr);

  // string qSqr = 7;
  void clear_qsqr();
  static const int kQSqrFieldNumber = 7;
  const ::std::string& qsqr() const;
  void set_qsqr(const ::std::string& value);
  #if LANG_CXX11
  void set_qsqr(::std::string&& value);
  #endif
  void set_qsqr(const char* value);
  void set_qsqr(const char* value, size_t size);
  ::std::string* mutable_qsqr();
  ::std::string* release_qsqr();
  void set_allocated_qsqr(::std::string* qsqr);

  // string pMinus1 = 8;
  void clear_pminus1();
  static const int kPMinus1FieldNumber = 8;
  const ::std::string& pminus1() const;
  void set_pminus1(const ::std::string& value);
  #if LANG_CXX11
  void set_pminus1(::std::string&& value);
  #endif
  void set_pminus1(const char* value);
  void set_pminus1(const char* value, size_t size);
  ::std::string* mutable_pminus1();
  ::std::string* release_pminus1();
  void set_allocated_pminus1(::std::string* pminus1);

  // string qMinus1 = 9;
  void clear_qminus1();
  static const int kQMinus1FieldNumber = 9;
  const ::std::string& qminus1() const;
  void set_qminus1(const ::std::string& value);
  #if LANG_CXX11
  void set_qminus1(::std::string&& value);
  #endif
  void set_qminus1(const char* value);
  void set_qminus1(const char* value, size_t size);
  ::std::string* mutable_qminus1();
  ::std::string* release_qminus1();
  void set_allocated_qminus1(::std::string* qminus1);

  // string hp = 10;
  void clear_hp();
  static const int kHpFieldNumber = 10;
  const ::std::string& hp() const;
  void set_hp(const ::std::string& value);
  #if LANG_CXX11
  void set_hp(::std::string&& value);
  #endif
  void set_hp(const char* value);
  void set_hp(const char* value, size_t size);
  ::std::string* mutable_hp();
  ::std::string* release_hp();
  void set_allocated_hp(::std::string* hp);

  // string hq = 11;
  void clear_hq();
  static const int kHqFieldNumber = 11;
  const ::std::string& hq() const;
  void set_hq(const ::std::string& value);
  #if LANG_CXX11
  void set_hq(::std::string&& value);
  #endif
  void set_hq(const char* value);
  void set_hq(const char* value, size_t size);
  ::std::string* mutable_hq();
  ::std::string* release_hq();
  void set_allocated_hq(::std::string* hq);

  // string qInvP = 12;
  void clear_qinvp();
  static const int kQInvPFieldNumber = 12;
  const ::std::string& qinvp() const;
  void set_qinvp(const ::std::string& value);
  #if LANG_CXX11
  void set_qinvp(::std::string&& value);
  #endif
  void set_qinvp(const char* value);
  void set_qinvp(const char* value, size_t size);
  ::std::string* mutable_qinvp();
  ::std::string* release_qinvp();
  void set_allocated_qinvp(::std::string* qinvp);

  // string pInvQ = 13;
  void clear_pinvq();
  static const int kPInvQFieldNumber = 13;
  const ::std::string& pinvq() const;
  void set_pinvq(const ::std::string& value);
  #if LANG_CXX11
  void set_pinvq(::std::string&& value);
  #endif
  void set_pinvq(const char* value);
  void set_pinvq(const char* value, size_t size);
  ::std::string* mutable_pinvq();
  ::std::string* release_pinvq();
  void set_allocated_pinvq(::std::string* pinvq);

  // @@protoc_insertion_point(class_scope:safeheron.proto.PailPriv)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr n_;
  ::google::protobuf::internal::ArenaStringPtr lambda_;
  ::google::protobuf::internal::ArenaStringPtr mu_;
  ::google::protobuf::internal::ArenaStringPtr p_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  ::google::protobuf::internal::ArenaStringPtr psqr_;
  ::google::protobuf::internal::ArenaStringPtr qsqr_;
  ::google::protobuf::internal::ArenaStringPtr pminus1_;
  ::google::protobuf::internal::ArenaStringPtr qminus1_;
  ::google::protobuf::internal::ArenaStringPtr hp_;
  ::google::protobuf::internal::ArenaStringPtr hq_;
  ::google::protobuf::internal::ArenaStringPtr qinvp_;
  ::google::protobuf::internal::ArenaStringPtr pinvq_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_paillier_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PailPub

// string n = 1;
inline void PailPub::clear_n() {
  n_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPub::n() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPub.n)
  return n_.GetNoArena();
}
inline void PailPub::set_n(const ::std::string& value) {
  
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPub.n)
}
#if LANG_CXX11
inline void PailPub::set_n(::std::string&& value) {
  
  n_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPub.n)
}
#endif
inline void PailPub::set_n(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPub.n)
}
inline void PailPub::set_n(const char* value, size_t size) {
  
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPub.n)
}
inline ::std::string* PailPub::mutable_n() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPub.n)
  return n_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPub::release_n() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPub.n)
  
  return n_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPub::set_allocated_n(::std::string* n) {
  if (n != nullptr) {
    
  } else {
    
  }
  n_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), n);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPub.n)
}

// string g = 2;
inline void PailPub::clear_g() {
  g_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPub::g() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPub.g)
  return g_.GetNoArena();
}
inline void PailPub::set_g(const ::std::string& value) {
  
  g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPub.g)
}
#if LANG_CXX11
inline void PailPub::set_g(::std::string&& value) {
  
  g_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPub.g)
}
#endif
inline void PailPub::set_g(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPub.g)
}
inline void PailPub::set_g(const char* value, size_t size) {
  
  g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPub.g)
}
inline ::std::string* PailPub::mutable_g() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPub.g)
  return g_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPub::release_g() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPub.g)
  
  return g_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPub::set_allocated_g(::std::string* g) {
  if (g != nullptr) {
    
  } else {
    
  }
  g_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPub.g)
}

// -------------------------------------------------------------------

// PailPriv

// string n = 1;
inline void PailPriv::clear_n() {
  n_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::n() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.n)
  return n_.GetNoArena();
}
inline void PailPriv::set_n(const ::std::string& value) {
  
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.n)
}
#if LANG_CXX11
inline void PailPriv::set_n(::std::string&& value) {
  
  n_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.n)
}
#endif
inline void PailPriv::set_n(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.n)
}
inline void PailPriv::set_n(const char* value, size_t size) {
  
  n_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.n)
}
inline ::std::string* PailPriv::mutable_n() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.n)
  return n_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_n() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.n)
  
  return n_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_n(::std::string* n) {
  if (n != nullptr) {
    
  } else {
    
  }
  n_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), n);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.n)
}

// string lambda = 2;
inline void PailPriv::clear_lambda() {
  lambda_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::lambda() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.lambda)
  return lambda_.GetNoArena();
}
inline void PailPriv::set_lambda(const ::std::string& value) {
  
  lambda_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.lambda)
}
#if LANG_CXX11
inline void PailPriv::set_lambda(::std::string&& value) {
  
  lambda_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.lambda)
}
#endif
inline void PailPriv::set_lambda(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  lambda_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.lambda)
}
inline void PailPriv::set_lambda(const char* value, size_t size) {
  
  lambda_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.lambda)
}
inline ::std::string* PailPriv::mutable_lambda() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.lambda)
  return lambda_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_lambda() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.lambda)
  
  return lambda_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_lambda(::std::string* lambda) {
  if (lambda != nullptr) {
    
  } else {
    
  }
  lambda_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lambda);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.lambda)
}

// string mu = 3;
inline void PailPriv::clear_mu() {
  mu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::mu() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.mu)
  return mu_.GetNoArena();
}
inline void PailPriv::set_mu(const ::std::string& value) {
  
  mu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.mu)
}
#if LANG_CXX11
inline void PailPriv::set_mu(::std::string&& value) {
  
  mu_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.mu)
}
#endif
inline void PailPriv::set_mu(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.mu)
}
inline void PailPriv::set_mu(const char* value, size_t size) {
  
  mu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.mu)
}
inline ::std::string* PailPriv::mutable_mu() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.mu)
  return mu_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_mu() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.mu)
  
  return mu_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_mu(::std::string* mu) {
  if (mu != nullptr) {
    
  } else {
    
  }
  mu_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mu);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.mu)
}

// string p = 4;
inline void PailPriv::clear_p() {
  p_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::p() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.p)
  return p_.GetNoArena();
}
inline void PailPriv::set_p(const ::std::string& value) {
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.p)
}
#if LANG_CXX11
inline void PailPriv::set_p(::std::string&& value) {
  
  p_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.p)
}
#endif
inline void PailPriv::set_p(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.p)
}
inline void PailPriv::set_p(const char* value, size_t size) {
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.p)
}
inline ::std::string* PailPriv::mutable_p() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.p)
  return p_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_p() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.p)
  
  return p_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_p(::std::string* p) {
  if (p != nullptr) {
    
  } else {
    
  }
  p_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.p)
}

// string q = 5;
inline void PailPriv::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::q() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.q)
  return q_.GetNoArena();
}
inline void PailPriv::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.q)
}
#if LANG_CXX11
inline void PailPriv::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.q)
}
#endif
inline void PailPriv::set_q(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.q)
}
inline void PailPriv::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.q)
}
inline ::std::string* PailPriv::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_q() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_q(::std::string* q) {
  if (q != nullptr) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.q)
}

// string pSqr = 6;
inline void PailPriv::clear_psqr() {
  psqr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::psqr() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.pSqr)
  return psqr_.GetNoArena();
}
inline void PailPriv::set_psqr(const ::std::string& value) {
  
  psqr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.pSqr)
}
#if LANG_CXX11
inline void PailPriv::set_psqr(::std::string&& value) {
  
  psqr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.pSqr)
}
#endif
inline void PailPriv::set_psqr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  psqr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.pSqr)
}
inline void PailPriv::set_psqr(const char* value, size_t size) {
  
  psqr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.pSqr)
}
inline ::std::string* PailPriv::mutable_psqr() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.pSqr)
  return psqr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_psqr() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.pSqr)
  
  return psqr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_psqr(::std::string* psqr) {
  if (psqr != nullptr) {
    
  } else {
    
  }
  psqr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psqr);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.pSqr)
}

// string qSqr = 7;
inline void PailPriv::clear_qsqr() {
  qsqr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::qsqr() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.qSqr)
  return qsqr_.GetNoArena();
}
inline void PailPriv::set_qsqr(const ::std::string& value) {
  
  qsqr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.qSqr)
}
#if LANG_CXX11
inline void PailPriv::set_qsqr(::std::string&& value) {
  
  qsqr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.qSqr)
}
#endif
inline void PailPriv::set_qsqr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qsqr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.qSqr)
}
inline void PailPriv::set_qsqr(const char* value, size_t size) {
  
  qsqr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.qSqr)
}
inline ::std::string* PailPriv::mutable_qsqr() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.qSqr)
  return qsqr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_qsqr() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.qSqr)
  
  return qsqr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_qsqr(::std::string* qsqr) {
  if (qsqr != nullptr) {
    
  } else {
    
  }
  qsqr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qsqr);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.qSqr)
}

// string pMinus1 = 8;
inline void PailPriv::clear_pminus1() {
  pminus1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::pminus1() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.pMinus1)
  return pminus1_.GetNoArena();
}
inline void PailPriv::set_pminus1(const ::std::string& value) {
  
  pminus1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.pMinus1)
}
#if LANG_CXX11
inline void PailPriv::set_pminus1(::std::string&& value) {
  
  pminus1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.pMinus1)
}
#endif
inline void PailPriv::set_pminus1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pminus1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.pMinus1)
}
inline void PailPriv::set_pminus1(const char* value, size_t size) {
  
  pminus1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.pMinus1)
}
inline ::std::string* PailPriv::mutable_pminus1() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.pMinus1)
  return pminus1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_pminus1() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.pMinus1)
  
  return pminus1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_pminus1(::std::string* pminus1) {
  if (pminus1 != nullptr) {
    
  } else {
    
  }
  pminus1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pminus1);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.pMinus1)
}

// string qMinus1 = 9;
inline void PailPriv::clear_qminus1() {
  qminus1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::qminus1() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.qMinus1)
  return qminus1_.GetNoArena();
}
inline void PailPriv::set_qminus1(const ::std::string& value) {
  
  qminus1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.qMinus1)
}
#if LANG_CXX11
inline void PailPriv::set_qminus1(::std::string&& value) {
  
  qminus1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.qMinus1)
}
#endif
inline void PailPriv::set_qminus1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qminus1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.qMinus1)
}
inline void PailPriv::set_qminus1(const char* value, size_t size) {
  
  qminus1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.qMinus1)
}
inline ::std::string* PailPriv::mutable_qminus1() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.qMinus1)
  return qminus1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_qminus1() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.qMinus1)
  
  return qminus1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_qminus1(::std::string* qminus1) {
  if (qminus1 != nullptr) {
    
  } else {
    
  }
  qminus1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qminus1);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.qMinus1)
}

// string hp = 10;
inline void PailPriv::clear_hp() {
  hp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::hp() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.hp)
  return hp_.GetNoArena();
}
inline void PailPriv::set_hp(const ::std::string& value) {
  
  hp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.hp)
}
#if LANG_CXX11
inline void PailPriv::set_hp(::std::string&& value) {
  
  hp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.hp)
}
#endif
inline void PailPriv::set_hp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.hp)
}
inline void PailPriv::set_hp(const char* value, size_t size) {
  
  hp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.hp)
}
inline ::std::string* PailPriv::mutable_hp() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.hp)
  return hp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_hp() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.hp)
  
  return hp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_hp(::std::string* hp) {
  if (hp != nullptr) {
    
  } else {
    
  }
  hp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hp);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.hp)
}

// string hq = 11;
inline void PailPriv::clear_hq() {
  hq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::hq() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.hq)
  return hq_.GetNoArena();
}
inline void PailPriv::set_hq(const ::std::string& value) {
  
  hq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.hq)
}
#if LANG_CXX11
inline void PailPriv::set_hq(::std::string&& value) {
  
  hq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.hq)
}
#endif
inline void PailPriv::set_hq(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.hq)
}
inline void PailPriv::set_hq(const char* value, size_t size) {
  
  hq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.hq)
}
inline ::std::string* PailPriv::mutable_hq() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.hq)
  return hq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_hq() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.hq)
  
  return hq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_hq(::std::string* hq) {
  if (hq != nullptr) {
    
  } else {
    
  }
  hq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hq);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.hq)
}

// string qInvP = 12;
inline void PailPriv::clear_qinvp() {
  qinvp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::qinvp() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.qInvP)
  return qinvp_.GetNoArena();
}
inline void PailPriv::set_qinvp(const ::std::string& value) {
  
  qinvp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.qInvP)
}
#if LANG_CXX11
inline void PailPriv::set_qinvp(::std::string&& value) {
  
  qinvp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.qInvP)
}
#endif
inline void PailPriv::set_qinvp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qinvp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.qInvP)
}
inline void PailPriv::set_qinvp(const char* value, size_t size) {
  
  qinvp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.qInvP)
}
inline ::std::string* PailPriv::mutable_qinvp() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.qInvP)
  return qinvp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_qinvp() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.qInvP)
  
  return qinvp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_qinvp(::std::string* qinvp) {
  if (qinvp != nullptr) {
    
  } else {
    
  }
  qinvp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qinvp);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.qInvP)
}

// string pInvQ = 13;
inline void PailPriv::clear_pinvq() {
  pinvq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PailPriv::pinvq() const {
  // @@protoc_insertion_point(field_get:safeheron.proto.PailPriv.pInvQ)
  return pinvq_.GetNoArena();
}
inline void PailPriv::set_pinvq(const ::std::string& value) {
  
  pinvq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safeheron.proto.PailPriv.pInvQ)
}
#if LANG_CXX11
inline void PailPriv::set_pinvq(::std::string&& value) {
  
  pinvq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safeheron.proto.PailPriv.pInvQ)
}
#endif
inline void PailPriv::set_pinvq(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pinvq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safeheron.proto.PailPriv.pInvQ)
}
inline void PailPriv::set_pinvq(const char* value, size_t size) {
  
  pinvq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safeheron.proto.PailPriv.pInvQ)
}
inline ::std::string* PailPriv::mutable_pinvq() {
  
  // @@protoc_insertion_point(field_mutable:safeheron.proto.PailPriv.pInvQ)
  return pinvq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PailPriv::release_pinvq() {
  // @@protoc_insertion_point(field_release:safeheron.proto.PailPriv.pInvQ)
  
  return pinvq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PailPriv::set_allocated_pinvq(::std::string* pinvq) {
  if (pinvq != nullptr) {
    
  } else {
    
  }
  pinvq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pinvq);
  // @@protoc_insertion_point(field_set_allocated:safeheron.proto.PailPriv.pInvQ)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace safeheron

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_paillier_2eproto
